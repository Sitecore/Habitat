@using Sitecore.Feature.Media
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Resources.Media
@model Sitecore.Mvc.Presentation.RenderingModel
@*TODO: Page editor mode*@
@{
  const int ThumbnailWidth = 750;
  const int maxWidth = 1200;
  var thumbnail = Html.Sitecore().ImageField(Templates.HasMedia.Fields.Thumbnail.ToString(), @Model.Item, mw: ThumbnailWidth, cssClass: "img-responsive");
  if (string.IsNullOrWhiteSpace(thumbnail?.ToString()))
  {
	  thumbnail = Html.Sitecore().ImageField(Templates.HasMediaImage.Fields.Image.ToString(), @Model.Item, mw: ThumbnailWidth, cssClass: "img-responsive");
  }
  if (string.IsNullOrWhiteSpace(thumbnail?.ToString()))
  {
	  return;
  }
}

<div class="lightbox lightbox-image">
	<a href="@Model.Item.ImageUrl(Templates.HasMediaImage.Fields.Image, new MediaUrlOptions(maxWidth, 0, false))" data-type="image" data-title="@Model.Item[Templates.HasMedia.Fields.Title]" data-footer="@Html.Encode(Html.Sitecore().Field(Templates.HasMedia.Fields.Description.ToString(), Model.Item))" data-toggle="lightbox" data-gallery="page">
		@thumbnail
		<span class="overlay"><i class="fa fa-search fa-2x"></i></span>
	</a>
</div>