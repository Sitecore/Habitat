// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Sitecore.Feature.Demo.Specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class XDBPanelFeature : Xunit.IClassFixture<XDBPanelFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "xDB Panel.feature"
#line hidden
        
        public XDBPanelFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "xDB Panel", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(XDBPanelFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC1_Open Main Panel view")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC1_OpenMainPanelView()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC1_Open Main Panel view", new string[] {
                        "NeedImplementation"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.When("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.Then("xDB panel has opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Header name"});
            table1.AddRow(new string[] {
                        "Engagement"});
            table1.AddRow(new string[] {
                        "Personal Information"});
            table1.AddRow(new string[] {
                        "Onsite Behavior"});
            table1.AddRow(new string[] {
                        "Referral"});
#line 9
 testRunner.And("xDB panel contains following headers", ((string)(null)), table1, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC2_Close Panel")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC2_ClosePanel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC2_Close Panel", new string[] {
                        "NeedImplementation"});
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.And("xDB panel has opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.When("Actor clicks <Close> button on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then("xDB panel is closed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC3_Refresh visit details panel")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC3_RefreshVisitDetailsPanel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC3_Refresh visit details panel", new string[] {
                        "NeedImplementation"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.And("xDB panel has opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.When("Actor opens Habitat Main page in a new tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "ConfirmPassword"});
            table2.AddRow(new string[] {
                        "kov10@sitecore.net",
                        "k",
                        "k"});
#line 30
 testRunner.And("Actor registers a new User in Habitat", ((string)(null)), table2, "And ");
#line 33
 testRunner.And("Actor returns to previous tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("Actor clicks <Refresh> button on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And("Actor expands <Onsite Behavior> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Triggered goal"});
            table3.AddRow(new string[] {
                        "Register"});
            table3.AddRow(new string[] {
                        "Login"});
#line 36
 testRunner.Then("Trigger Goals field contains values", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC4_End visit")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC4_EndVisit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC4_End visit", new string[] {
                        "NeedImplementation"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
  testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
  testRunner.And("xDB panel has opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
  testRunner.When("Actor clicks <End Visit> button on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
  testRunner.And("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
  testRunner.And("Actor expands Engagement header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number of visits"});
            table4.AddRow(new string[] {
                        "2"});
#line 50
  testRunner.Then("<Engagement header> contains following values", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC5_Engagement header_Main view")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC5_EngagementHeader_MainView()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC5_Engagement header_Main view", new string[] {
                        "NeedImplementation"});
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
 testRunner.When("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Engagement value",
                        "Pages Viewed",
                        "Number of visits"});
            table5.AddRow(new string[] {
                        "0",
                        "1",
                        "2"});
#line 59
 testRunner.Then("<Engagement header> contains following values", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC6_Engagement header_Engagement value_First open")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC6_EngagementHeader_EngagementValue_FirstOpen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC6_Engagement header_Engagement value_First open", new string[] {
                        "NeedImplementation"});
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
  testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
  testRunner.And("xDB panel has opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
  testRunner.When("Actor expands <Engagement header> on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "field value"});
            table6.AddRow(new string[] {
                        "0"});
#line 69
  testRunner.Then("<Engagement value> field contains", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC7_Engagement header_Engagement value_Triggered value")]
        [Xunit.TraitAttribute("Category", "Design")]
        [Xunit.TraitAttribute("Category", "starts")]
        [Xunit.TraitAttribute("Category", "after")]
        [Xunit.TraitAttribute("Category", "Bug")]
        [Xunit.TraitAttribute("Category", "37402")]
        [Xunit.TraitAttribute("Category", "is")]
        [Xunit.TraitAttribute("Category", "implemented")]
        public virtual void XDBPanel_UC7_EngagementHeader_EngagementValue_TriggeredValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC7_Engagement header_Engagement value_Triggered value", new string[] {
                        "Design",
                        "starts",
                        "after",
                        "Bug",
                        "37402",
                        "is",
                        "implemented"});
#line 76
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC8_Engagement header_Pages seen in this visit_Ten latest pages")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC8_EngagementHeader_PagesSeenInThisVisit_TenLatestPages()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC8_Engagement header_Pages seen in this visit_Ten latest pages", new string[] {
                        "NeedImplementation"});
#line 80
this.ScenarioSetup(scenarioInfo);
#line 81
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
 testRunner.When("Actor goes to More-Info page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.And("Actor goes to Feature page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("Actor goes to Person page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.And("Actor goes to Employees-List page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
 testRunner.And("Actor goes to Main page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.And("Actor goes to Register page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
 testRunner.And("Actor goes to Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.And("Actor goes to Getting-Started page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.And("Actor goes to Main page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.And("Actor goes to More-Info page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And("Actor expands <Engagement header> on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "field value"});
            table7.AddRow(new string[] {
                        "/More-Info"});
            table7.AddRow(new string[] {
                        "/Modules/Feature"});
            table7.AddRow(new string[] {
                        "/Modules/Feature/Person"});
            table7.AddRow(new string[] {
                        "/Modules/Feature/Person/Employees-List"});
            table7.AddRow(new string[] {
                        "/Home"});
            table7.AddRow(new string[] {
                        "/Register"});
            table7.AddRow(new string[] {
                        "/Login"});
            table7.AddRow(new string[] {
                        "/Getting-Started"});
            table7.AddRow(new string[] {
                        "/Home"});
            table7.AddRow(new string[] {
                        "/More-Info"});
#line 94
 testRunner.Then("<Pages seen in this visit> field contains", ((string)(null)), table7, "Then ");
#line 106
 testRunner.And("Some pages have info about time actor had spent on page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC9_Engagement header_Visits to the site")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC9_EngagementHeader_VisitsToTheSite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC9_Engagement header_Visits to the site", new string[] {
                        "NeedImplementation"});
#line 110
this.ScenarioSetup(scenarioInfo);
#line 111
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 112
 testRunner.And("xDB panel has opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
 testRunner.When("Actor clicks <End Visit> button on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
 testRunner.And("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
 testRunner.And("Actor clicks <End Visit> button on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.And("Actor expands <Engagement header> on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "field value"});
            table8.AddRow(new string[] {
                        "3"});
#line 118
 testRunner.Then("<Visits to the site> field contains", ((string)(null)), table8, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number of visits"});
            table9.AddRow(new string[] {
                        "2"});
#line 121
 testRunner.And("<Engagement header> contains following values", ((string)(null)), table9, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC10_Personal Information header_Contact identification_Anonymus")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC10_PersonalInformationHeader_ContactIdentification_Anonymus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC10_Personal Information header_Contact identification_Anonymus", new string[] {
                        "NeedImplementation"});
#line 127
this.ScenarioSetup(scenarioInfo);
#line 128
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 129
 testRunner.When("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
 testRunner.And("Actor expands <Personal Information> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Contact identification"});
            table10.AddRow(new string[] {
                        "You are anonymous"});
#line 131
 testRunner.Then("<Personal Information> contains following values", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC11_Personal Information header_Contact identification_Registered user" +
            "")]
        [Xunit.TraitAttribute("Category", "Design")]
        [Xunit.TraitAttribute("Category", "starts")]
        [Xunit.TraitAttribute("Category", "after")]
        [Xunit.TraitAttribute("Category", "Bug")]
        [Xunit.TraitAttribute("Category", "37402")]
        [Xunit.TraitAttribute("Category", "is")]
        [Xunit.TraitAttribute("Category", "implemented")]
        public virtual void XDBPanel_UC11_PersonalInformationHeader_ContactIdentification_RegisteredUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC11_Personal Information header_Contact identification_Registered user" +
                    "", new string[] {
                        "Design",
                        "starts",
                        "after",
                        "Bug",
                        "37402",
                        "is",
                        "implemented"});
#line 138
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC12_Personal Information header_Device detection")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC12_PersonalInformationHeader_DeviceDetection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC12_Personal Information header_Device detection", new string[] {
                        "NeedImplementation"});
#line 142
this.ScenarioSetup(scenarioInfo);
#line 143
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 144
 testRunner.When("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 145
 testRunner.And("Actor expands <Personal Information> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Device",
                        "Browser"});
            table11.AddRow(new string[] {
                        "Misc, Windows PC",
                        "Unidentified"});
#line 146
 testRunner.Then("<Device> contains following values", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC13_Onsite Behavior_Profiling_Contact have not been profiled")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC13_OnsiteBehavior_Profiling_ContactHaveNotBeenProfiled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC13_Onsite Behavior_Profiling_Contact have not been profiled", new string[] {
                        "NeedImplementation"});
#line 153
this.ScenarioSetup(scenarioInfo);
#line 154
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 155
 testRunner.When("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
 testRunner.And("Actor expands <Personal Information> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "field value"});
            table12.AddRow(new string[] {
                        "You have not been profiled yet"});
#line 157
 testRunner.Then("<Profiling> contains following values", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC14_Onsite Behavior_Profiling_Contact profile")]
        [Xunit.TraitAttribute("Category", "Design")]
        [Xunit.TraitAttribute("Category", "starts")]
        [Xunit.TraitAttribute("Category", "after")]
        [Xunit.TraitAttribute("Category", "Bug")]
        [Xunit.TraitAttribute("Category", "37402")]
        [Xunit.TraitAttribute("Category", "is")]
        [Xunit.TraitAttribute("Category", "implemented")]
        public virtual void XDBPanel_UC14_OnsiteBehavior_Profiling_ContactProfile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC14_Onsite Behavior_Profiling_Contact profile", new string[] {
                        "Design",
                        "starts",
                        "after",
                        "Bug",
                        "37402",
                        "is",
                        "implemented"});
#line 164
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC15_Onsite Behavior_Triggered goals_No triggered goals")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC15_OnsiteBehavior_TriggeredGoals_NoTriggeredGoals()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC15_Onsite Behavior_Triggered goals_No triggered goals", new string[] {
                        "NeedImplementation"});
#line 169
this.ScenarioSetup(scenarioInfo);
#line 170
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 171
 testRunner.When("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 172
 testRunner.And("Actor expands <Personal Information> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "field value"});
            table13.AddRow(new string[] {
                        "You have triggered no goals so far"});
#line 173
 testRunner.Then("<Triggered goals> contains following values", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC16_Onsite Behavior_Triggered goals_Trigger")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC16_OnsiteBehavior_TriggeredGoals_Trigger()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC16_Onsite Behavior_Triggered goals_Trigger", new string[] {
                        "NeedImplementation"});
#line 179
this.ScenarioSetup(scenarioInfo);
#line 180
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 181
 testRunner.And("xDB panel has opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "ConfirmPassword"});
            table14.AddRow(new string[] {
                        "kov10@sitecore.net",
                        "k",
                        "k"});
#line 182
 testRunner.When("Actor registers a new User in Habitat", ((string)(null)), table14, "When ");
#line 185
 testRunner.And("Actor logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table15.AddRow(new string[] {
                        "kov10@sitecore.net",
                        "k"});
#line 186
 testRunner.And("Actor logins to Habitat with a user", ((string)(null)), table15, "And ");
#line 189
 testRunner.And("Actor expands <Onsite Behavior> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Triggered goal"});
            table16.AddRow(new string[] {
                        "Register"});
            table16.AddRow(new string[] {
                        "Login"});
            table16.AddRow(new string[] {
                        "Login"});
#line 190
 testRunner.Then("<Triggered goals> contains following values", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC17_Onsite Behavior_Outcomes_No outcomes have been reached")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC17_OnsiteBehavior_Outcomes_NoOutcomesHaveBeenReached()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC17_Onsite Behavior_Outcomes_No outcomes have been reached", new string[] {
                        "NeedImplementation"});
#line 199
this.ScenarioSetup(scenarioInfo);
#line 200
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 201
 testRunner.And("xDB panel has opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
 testRunner.When("Actor expands <Onsite Behavior> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "field value"});
            table17.AddRow(new string[] {
                        "You have reached no outcomes"});
#line 203
 testRunner.Then("<Outcomes> contains following values", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC18_Onsite Behavior_Outcomes_Triggered outcome")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC18_OnsiteBehavior_Outcomes_TriggeredOutcome()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC18_Onsite Behavior_Outcomes_Triggered outcome", new string[] {
                        "NeedImplementation"});
#line 212
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "FieldName",
                        "FieldValue"});
            table18.AddRow(new string[] {
                        "/sitecore/content/Habitat",
                        "RegisterOutcome",
                        "Outcomes/Sales Lead"});
#line 213
 testRunner.Given("Outcome set to item field", ((string)(null)), table18, "Given ");
#line 216
 testRunner.And("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.And("xDB panel has opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.When("Actor expands <Onsite Behavior> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "field value"});
            table19.AddRow(new string[] {
                        "Sales Lead"});
#line 219
 testRunner.Then("<Outcomes> contains following values", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC19_Referral_Referrer_Direct referrer")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC19_Referral_Referrer_DirectReferrer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC19_Referral_Referrer_Direct referrer", new string[] {
                        "NeedImplementation"});
#line 225
this.ScenarioSetup(scenarioInfo);
#line 226
  testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 227
  testRunner.And("xDB panel has opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
  testRunner.When("Actor expands <Referral> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "field value"});
            table20.AddRow(new string[] {
                        "Direct traffic"});
#line 229
  testRunner.Then("<Outcomes> contains following values", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC20_Referral_Referrer_Referrel after second visit")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC20_Referral_Referrer_ReferrelAfterSecondVisit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC20_Referral_Referrer_Referrel after second visit", new string[] {
                        "NeedImplementation"});
#line 236
this.ScenarioSetup(scenarioInfo);
#line 237
  testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 238
  testRunner.And("xDB panel has opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
  testRunner.When("Actor clicks <End Visit> button on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 240
  testRunner.And("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
  testRunner.And("Actor expands <Referral> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "field value"});
            table21.AddRow(new string[] {
                        "Habitat website url"});
#line 242
  testRunner.Then("<Outcomes> contains following values", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC21_Referral_Referrer_From another site")]
        [Xunit.TraitAttribute("Category", "Bug")]
        [Xunit.TraitAttribute("Category", "35882:")]
        public virtual void XDBPanel_UC21_Referral_Referrer_FromAnotherSite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC21_Referral_Referrer_From another site", new string[] {
                        "Bug",
                        "35882:"});
#line 249
this.ScenarioSetup(scenarioInfo);
#line 250
 testRunner.Given("Mockup of Google page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 251
 testRunner.When("Actor enters new test search text in to search field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 252
 testRunner.And("Actor clicks Google Search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
 testRunner.And("Actor clicks Sitecore Habitat - Flexibility, Simplicity, Extensibility‎ link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 254
 testRunner.And("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
  testRunner.And("Actor expands <Referral> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "field value"});
            table22.AddRow(new string[] {
                        "Demo website url"});
#line 256
  testRunner.Then("<Outcomes> contains following values", ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC22_Referral_Campaigns_No associated campaigns")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC22_Referral_Campaigns_NoAssociatedCampaigns()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC22_Referral_Campaigns_No associated campaigns", new string[] {
                        "NeedImplementation"});
#line 263
this.ScenarioSetup(scenarioInfo);
#line 264
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 265
 testRunner.And("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
 testRunner.And("Actor expands <Referral> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "field value"});
            table23.AddRow(new string[] {
                        "You have not been associated with any campaigns"});
#line 267
 testRunner.Then("<Campaigns> contains following values", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC23_Referral_Campaigns_No associated campaigns")]
        [Xunit.TraitAttribute("Category", "Bug")]
        [Xunit.TraitAttribute("Category", "35882:")]
        public virtual void XDBPanel_UC23_Referral_Campaigns_NoAssociatedCampaigns()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC23_Referral_Campaigns_No associated campaigns", new string[] {
                        "Bug",
                        "35882:"});
#line 273
this.ScenarioSetup(scenarioInfo);
#line 274
 testRunner.Given("Mockup of Google page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 275
 testRunner.When("Actor enters new test search text in to search field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 276
 testRunner.And("Actor clicks Google Search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 277
 testRunner.And("Actor clicks Sitecore Habitat - Flexibility, Simplicity, Extensibility‎ link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 278
 testRunner.And("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 279
 testRunner.And("Actor expands <Referral> header on xDB panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "field value"});
            table24.AddRow(new string[] {
                        "Facebook Content Messages"});
#line 280
 testRunner.Then("<Campaigns> contains following values", ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC24_Available on another page")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC24_AvailableOnAnotherPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC24_Available on another page", new string[] {
                        "NeedImplementation"});
#line 286
this.ScenarioSetup(scenarioInfo);
#line 287
  testRunner.Given("Habitat website is opened on Feature page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 288
  testRunner.When("Actor selects <Open visit details panel> slidebar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 289
 testRunner.Then("xDB panel has opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Header name"});
            table25.AddRow(new string[] {
                        "Engagement"});
            table25.AddRow(new string[] {
                        "Personal Information"});
            table25.AddRow(new string[] {
                        "Onsite Behavior"});
            table25.AddRow(new string[] {
                        "Referral"});
#line 290
 testRunner.And("xDB panel contains following headers", ((string)(null)), table25, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC25_Not available in Edit mode")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void XDBPanel_UC25_NotAvailableInEditMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC25_Not available in Edit mode", new string[] {
                        "NeedImplementation"});
#line 300
this.ScenarioSetup(scenarioInfo);
#line 301
 testRunner.Given("User registered and login on Habitat website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 302
 testRunner.When("User opens Main Page and switch  to Edit mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 303
 testRunner.Then("<xDB> panel be unavailable from right side of window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC26_Not available in Preview mode")]
        public virtual void XDBPanel_UC26_NotAvailableInPreviewMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC26_Not available in Preview mode", ((string[])(null)));
#line 305
this.ScenarioSetup(scenarioInfo);
#line 306
    testRunner.Given("User registered and login on Habitat website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 307
 testRunner.When("User opens Main Page and switch to Preview mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 308
 testRunner.Then("<xDB> panel be unavailable from right side of window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC27_Not available in Explore mode")]
        public virtual void XDBPanel_UC27_NotAvailableInExploreMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC27_Not available in Explore mode", ((string[])(null)));
#line 310
this.ScenarioSetup(scenarioInfo);
#line 311
 testRunner.Given("User registered and login on Habitat website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 312
 testRunner.When("User opens Main Page and switch to Explore mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 313
 testRunner.Then("<xDB> panel be unavailable from right side of window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC28_Not available in Debug mode")]
        public virtual void XDBPanel_UC28_NotAvailableInDebugMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC28_Not available in Debug mode", ((string[])(null)));
#line 315
this.ScenarioSetup(scenarioInfo);
#line 316
 testRunner.Given("User registered and login on Habitat website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 317
 testRunner.When("User opens Main Page and switch to Debug mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 318
 testRunner.Then("<xDB> panel be unavailable from right side of window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "xDB Panel")]
        [Xunit.TraitAttribute("Description", "xDB Panel_UC29_Tooltips")]
        [Xunit.TraitAttribute("Category", "Need")]
        [Xunit.TraitAttribute("Category", "design")]
        [Xunit.TraitAttribute("Category", "after")]
        [Xunit.TraitAttribute("Category", "Bug")]
        [Xunit.TraitAttribute("Category", "37617")]
        [Xunit.TraitAttribute("Category", "is")]
        [Xunit.TraitAttribute("Category", "fixed")]
        public virtual void XDBPanel_UC29_Tooltips()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("xDB Panel_UC29_Tooltips", new string[] {
                        "Need",
                        "design",
                        "after",
                        "Bug",
                        "37617",
                        "is",
                        "fixed"});
#line 322
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                XDBPanelFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                XDBPanelFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
