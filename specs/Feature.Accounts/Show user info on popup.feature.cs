// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Sitecore.Feature.Accounts.Specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ShowUserInfoOnPopupFeature : Xunit.IClassFixture<ShowUserInfoOnPopupFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Show user info on popup.feature"
#line hidden
        
        public ShowUserInfoOnPopupFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Show user info on popup", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(ShowUserInfoOnPopupFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show user info on popup")]
        [Xunit.TraitAttribute("Description", "Account_Show user info on popup_UC1_Only email is shown")]
        [Xunit.TraitAttribute("Category", "Ready")]
        public virtual void Account_ShowUserInfoOnPopup_UC1_OnlyEmailIsShown()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Account_Show user info on popup_UC1_Only email is shown", new string[] {
                        "Ready"});
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("Habitat website is opened on Register page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "ConfirmPassword"});
            table1.AddRow(new string[] {
                        "kov@sitecore.net",
                        "k",
                        "k"});
#line 6
 testRunner.When("Actor enters following data in to the register fields", ((string)(null)), table1, "When ");
#line 9
 testRunner.And("Actor clicks Register button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("Actor selects User icon on Navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Email lable"});
            table2.AddRow(new string[] {
                        "kov@sitecore.net",
                        "E-mail"});
#line 11
 testRunner.Then("User info is shown on User popup", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show user info on popup")]
        [Xunit.TraitAttribute("Description", "Account_Show user info on popup_UC2_Full user info is shown")]
        [Xunit.TraitAttribute("Category", "Ready")]
        public virtual void Account_ShowUserInfoOnPopup_UC2_FullUserInfoIsShown()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Account_Show user info on popup_UC2_Full user info is shown", new string[] {
                        "Ready"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "ConfirmPassword"});
            table3.AddRow(new string[] {
                        "kov@sitecore.net",
                        "k",
                        "k"});
#line 18
 testRunner.Given("User with following data is registered in Habitat", ((string)(null)), table3, "Given ");
#line 21
 testRunner.And("Edit profile page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "LastName",
                        "FirstName",
                        "PhoneNumber"});
            table4.AddRow(new string[] {
                        "Teltov",
                        "Konstantin",
                        "+38(067)3333333"});
#line 22
 testRunner.When("User inputs data in to the fields", ((string)(null)), table4, "When ");
#line 25
 testRunner.And("User clicks Update button on Edit User Profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("Actor selects User icon on Navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Name",
                        "Email lable",
                        "Name Lable"});
            table5.AddRow(new string[] {
                        "kov@sitecore.net",
                        "Konstantin Teltov",
                        "E-mail",
                        "Name"});
#line 27
 testRunner.Then("User info is shown on User popup", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show user info on popup")]
        [Xunit.TraitAttribute("Description", "Account_Show user info on popup_UC3_User Name with special symbols")]
        [Xunit.TraitAttribute("Category", "Ready")]
        public virtual void Account_ShowUserInfoOnPopup_UC3_UserNameWithSpecialSymbols()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Account_Show user info on popup_UC3_User Name with special symbols", new string[] {
                        "Ready"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "ConfirmPassword"});
            table6.AddRow(new string[] {
                        "kov@sitecore.net",
                        "k",
                        "k"});
#line 34
 testRunner.Given("User with following data is registered in Habitat", ((string)(null)), table6, "Given ");
#line 37
 testRunner.And("Edit profile page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "LastName",
                        "FirstName",
                        "PhoneNumber"});
            table7.AddRow(new string[] {
                        "Teltov!@#$%^&?()-+*",
                        "KONSTANTIN!@#$%^&?()-+*",
                        "+38(067)3333333"});
#line 38
 testRunner.When("User inputs data in to the fields", ((string)(null)), table7, "When ");
#line 41
 testRunner.And("User clicks Update button on Edit User Profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("Actor selects User icon on Navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Name",
                        "Email lable",
                        "Name Lable"});
            table8.AddRow(new string[] {
                        "kov@sitecore.net",
                        "Konstantin!@#$%^&?()-+* Teltov!@#$%^&?()-+*",
                        "E-mail",
                        "Name"});
#line 43
 testRunner.Then("User info is shown on User popup", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show user info on popup")]
        [Xunit.TraitAttribute("Description", "Account_Show user info on popup_Bug36103_Name label should dismiss if user has re" +
            "moved User Last Name and First Name")]
        [Xunit.TraitAttribute("Category", "Ready")]
        public virtual void Account_ShowUserInfoOnPopup_Bug36103_NameLabelShouldDismissIfUserHasRemovedUserLastNameAndFirstName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Account_Show user info on popup_Bug36103_Name label should dismiss if user has re" +
                    "moved User Last Name and First Name", new string[] {
                        "Ready"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "ConfirmPassword"});
            table9.AddRow(new string[] {
                        "kov@sitecore.net",
                        "k",
                        "k"});
#line 50
 testRunner.Given("User with following data is registered in Habitat", ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "LastName",
                        "FirstName"});
            table10.AddRow(new string[] {
                        "Teltov",
                        "Konstantin"});
#line 53
 testRunner.And("Following fields were updated in User Profile", ((string)(null)), table10, "And ");
#line 56
 testRunner.And("User clicks Update button on Edit User Profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "LastName",
                        "FirstName"});
            table11.AddRow(new string[] {
                        "",
                        ""});
#line 57
 testRunner.When("User updates following fields in User Profile", ((string)(null)), table11, "When ");
#line 60
 testRunner.And("User clicks Update button on Edit User Profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("Actor selects User icon on Navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Email lable"});
            table12.AddRow(new string[] {
                        "kov@sitecore.net",
                        "E-mail"});
#line 62
 testRunner.Then("User info is shown on User popup", ((string)(null)), table12, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name Lable",
                        "Name"});
            table13.AddRow(new string[] {
                        "Name",
                        "Konstantin Teltov"});
#line 65
 testRunner.And("User info is not shown on User popup", ((string)(null)), table13, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ShowUserInfoOnPopupFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ShowUserInfoOnPopupFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
