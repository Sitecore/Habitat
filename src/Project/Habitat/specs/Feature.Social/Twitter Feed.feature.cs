// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Sitecore.Feature.Social.Specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class TwitterFeedFeature : Xunit.IUseFixture<TwitterFeedFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Twitter Feed.feature"
#line hidden
        
        public TwitterFeedFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Twitter Feed", "\nIn order visitors can follow twitter posts on the website\nAs an editor\nI want to" +
                    " be able to add a twitter feed on pages", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(TwitterFeedFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_UC1_Twitter feed presents on the page")]
        public virtual void Social_TwitterFeed_UC1_TwitterFeedPresentsOnThePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_UC1_Twitter feed presents on the page", new string[] {
                        "NeedImplementation"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("Habitat website is opened on main page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When("Actor scroll down the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text"});
            table1.AddRow(new string[] {
                        "Tweets by @sitecorehabitat"});
#line 11
 testRunner.Then("block with following title is present on the page", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_UC2_Add twitter rendering on the page")]
        public virtual void Social_TwitterFeed_UC2_AddTwitterRenderingOnThePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_UC2_Add twitter rendering on the page", new string[] {
                        "NeedImplementation"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given("Admin user is logged into Habitat", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.And("Experience Editor application is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("Button <Add a new component> is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And("<Select a Rendering> dialog is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.When("Admin selects TwitterFeed rendering", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.And("Admin clicks Select button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("Admin selects sitecorehabitat datasource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("Admin clicks OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("Admin saves changes on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text"});
            table2.AddRow(new string[] {
                        "Tweets by @sitecorehabitat"});
#line 27
 testRunner.Then("block with following title is present on the page", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_UC3_Remove twitter rendering from page")]
        public virtual void Social_TwitterFeed_UC3_RemoveTwitterRenderingFromPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_UC3_Remove twitter rendering from page", new string[] {
                        "NeedImplementation"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.Given("Admin user is logged into Habitat", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
 testRunner.And("Experience Editor application is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("TwitterFeed component is present on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.When("Admin clicks <Remove component> button on the rendering menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.Then("TwitterFeed is no longer present on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_UC4_Edit rendering title")]
        public virtual void Social_TwitterFeed_UC4_EditRenderingTitle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_UC4_Edit rendering title", new string[] {
                        "NeedImplementation"});
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
 testRunner.Given("Admin user is logged into Habitat", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
 testRunner.And("Experience Editor application is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.And("TwitterFeed component is present on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "FeedTitle Value"});
            table3.AddRow(new string[] {
                        "Tweets by @sitecorehabitat"});
#line 46
 testRunner.And("FeedTitle contains following value", ((string)(null)), table3, "And ");
#line 49
 testRunner.When("Admin clicks <Edit related item> button on the rendering menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Section name",
                        "Field Name",
                        "Value"});
            table4.AddRow(new string[] {
                        "Twitter Feed",
                        "FeedTitle",
                        "Tweets by @sitecore"});
#line 50
 testRunner.And("Edit following value", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "FeedTitle Value"});
            table5.AddRow(new string[] {
                        "Tweets by @sitecore"});
#line 53
 testRunner.Then("FeedTitle contains following value", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_UC5_Make sure latest posts are shown on the page")]
        public virtual void Social_TwitterFeed_UC5_MakeSureLatestPostsAreShownOnThePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_UC5_Make sure latest posts are shown on the page", new string[] {
                        "NeedImplementation"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Username",
                        "Password"});
            table6.AddRow(new string[] {
                        "@sitecorehabitat",
                        "Sitecore54"});
#line 60
 testRunner.Given("@sitecorehabitat account is registered on twitter.com", ((string)(null)), table6, "Given ");
#line 63
 testRunner.And("@sitecorehabitat posted new tweet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.And("TwitterFeed based on @sitecorehabitat added on main page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.When("user refreshes main page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.Then("new tweet appears in the TwitterFeed component on the main page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_UC6_Add new datasource")]
        public virtual void Social_TwitterFeed_UC6_AddNewDatasource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_UC6_Add new datasource", new string[] {
                        "NeedImplementation"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 71
 testRunner.Given("Admin user is logged into Habitat", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
 testRunner.And("Content Editor application is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("/sitecore/content/Shared/Social/Twitter feeds item is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.When("Admin clicks TwitterFeed button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
 testRunner.And("Admin enters <TwitterFeed1> name on Message dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And("Admin clicks OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value"});
            table7.AddRow(new string[] {
                        "641815052882804737"});
#line 77
 testRunner.And("Admin enters followind data WidgetId field", ((string)(null)), table7, "And ");
#line 80
 testRunner.And("Admin saves changes on the item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.And("Admin opens Experience Editor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.And("Admin clicks <Add a new component> button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.And("Admin selects TwitterFeed rendering on the <Select a Rendering> dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("Admin clicks Select button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.Then("<TwitterFeed1> datasource available in the list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_Bug36084_ Place settinfg for configuration number of tweets o" +
            "n Control Properties dialog")]
        public virtual void Social_TwitterFeed_Bug36084_PlaceSettinfgForConfigurationNumberOfTweetsOnControlPropertiesDialog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_Bug36084_ Place settinfg for configuration number of tweets o" +
                    "n Control Properties dialog", new string[] {
                        "NeedImplementation"});
#line 88
this.ScenarioSetup(scenarioInfo);
#line 89
 testRunner.Given("Admin user is logged into Habitat", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 90
 testRunner.And("Experience Editor application is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.And("<TwitterFeed> component with <2> tweets on it is present in the bottom of the pag" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And("<Control Properties> dialog for <TwitterFeed> rendering is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.When("Admin changes <TweetsToShow> field value to <4>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
 testRunner.And("Admin saves changes on the item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.Then("<TwitterFeed> component with <4> tweets on it is present in the bottom of the pag" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                TwitterFeedFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                TwitterFeedFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
