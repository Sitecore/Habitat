<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeEditing/GenerateMemberBody/MethodImplementationKind/@EntryValue">ReturnDefaultValue</s:String>
	<s:Boolean x:Key="/Default/CodeInspection/ExcludedFiles/FileMasksToSkip/=_002A_002Emin_002Ejs/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/ThisQualifier/INSTANCE_MEMBERS_QUALIFY_MEMBERS/@EntryValue">All</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_ATTRIBUTE_STYLE/@EntryValue">SEPARATE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FIXED_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOR_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOREACH_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_IFELSE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_USING_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_WHILE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_FIXED_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_USINGS_STMT/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ACCESSOR_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_WHILE_ON_NEW_LINE/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/REDUNDANT_THIS_QUALIFIER_STYLE/@EntryValue">ALWAYS_USE</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AFTER_TYPECAST_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AROUND_MULTIPLICATIVE_OP/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_TYPEOF_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/STICK_COMMENT/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LINES/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LINQ_EXPRESSIONS/@EntryValue">CHOP_ALWAYS</s:String>
	
	
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/CustomPattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-8"?&gt;&#xD;
&lt;Patterns xmlns="urn:shemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
&#xD;
    &lt;!-- Do not reorder COM interfaces --&gt;&#xD;
    &lt;Pattern&gt;&#xD;
        &lt;Match&gt;&#xD;
            &lt;And Weight="2000"&gt;&#xD;
                &lt;Kind Is="interface"/&gt;&#xD;
                &lt;HasAttribute CLRName="System.Runtime.InteropServices.InterfaceTypeAttribute"&#xD;
                              Inherit="true"/&gt;&#xD;
            &lt;/And&gt;&#xD;
        &lt;/Match&gt;&#xD;
    &lt;/Pattern&gt;&#xD;
&#xD;
    &lt;!-- Do not reorder P/Invoke structs --&gt;&#xD;
    &lt;Pattern&gt;&#xD;
        &lt;Match&gt;&#xD;
            &lt;And Weight="2000"&gt;&#xD;
                &lt;Or&gt;&#xD;
                    &lt;Kind Is="struct"/&gt;&#xD;
                    &lt;Kind Is="class"/&gt;&#xD;
                &lt;/Or&gt;&#xD;
                &lt;HasAttribute CLRName="System.Runtime.InteropServices.StructLayoutAttribute"&#xD;
                              Inherit="true"/&gt;&#xD;
            &lt;/And&gt;&#xD;
        &lt;/Match&gt;&#xD;
    &lt;/Pattern&gt;&#xD;
&#xD;
    &lt;!-- Do not reorder P/Invoke classes (called xxxNativeMethods) --&gt;&#xD;
    &lt;Pattern&gt;&#xD;
        &lt;Match&gt;&#xD;
            &lt;And Weight="2000"&gt;&#xD;
                &lt;Kind Is="class"/&gt;&#xD;
                &lt;Name Is=".*NativeMethods" /&gt;&#xD;
            &lt;/And&gt;&#xD;
        &lt;/Match&gt;&#xD;
    &lt;/Pattern&gt;&#xD;
&#xD;
    &lt;!-- StyleCop pattern --&gt;&#xD;
    &lt;Pattern RemoveAllRegions="true"&gt;&#xD;
        &lt;Match&gt;&#xD;
            &lt;Or Weight="1000" &gt;&#xD;
                &lt;Kind Is="class" /&gt;&#xD;
                &lt;Kind Is="struct" /&gt;&#xD;
                &lt;Kind Is="interface"/&gt;&#xD;
            &lt;/Or&gt;&#xD;
        &lt;/Match&gt;&#xD;
&#xD;
        &lt;!-- constants and fields --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Or&gt;&#xD;
                    &lt;Kind Is="constant"/&gt;&#xD;
                    &lt;Kind Is="field"/&gt;&#xD;
                &lt;/Or&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
                &lt;Kind Order="constant field"/&gt;&#xD;
                &lt;Readonly/&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Constants and Fields"/&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- constructors --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Or Weight="200"&gt;&#xD;
                    &lt;Kind Is="constructor"/&gt;&#xD;
                    &lt;Kind Is="destructor"/&gt;&#xD;
                &lt;/Or&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Kind Order="constructor destructor"/&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Constructors and Destructors"/&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- delegates --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="delegate"/&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Static /&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Delegates"/&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- events --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="event"/&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Static /&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Events"/&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- enum --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="enum"/&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Enums"/&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- interfaces --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="interface" /&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Interfaces"/&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- properties --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;And Weight="500"&gt;&#xD;
                    &lt;Kind Is="property"/&gt;&#xD;
                    &lt;ImplementsInterface CLRName=".*"/&gt;&#xD;
                &lt;/And&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;ImplementsInterface /&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Implemented Interfaces"&gt;&#xD;
                &lt;ImplementsInterface Region="${ImplementsInterface}" /&gt;&#xD;
            &lt;/Group&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="property"/&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Properties"/&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- indexers --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="indexer"&#xD;
                      Weight="300" /&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Indexers"/&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- operator --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="operator"/&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Operators"/&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- public methods --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;And&gt;&#xD;
                    &lt;Kind Is="method"/&gt;&#xD;
                    &lt;Access Is="public"/&gt;&#xD;
                &lt;/And&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public"/&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Public Methods"/&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- Implemented Interfaces --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;And Weight="500"&gt;&#xD;
                    &lt;Kind Is="method"/&gt;&#xD;
                    &lt;ImplementsInterface CLRName=".*"/&gt;&#xD;
                &lt;/And&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;ImplementsInterface /&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Implemented Interfaces"&gt;&#xD;
                &lt;ImplementsInterface Region="${ImplementsInterface}" /&gt;&#xD;
            &lt;/Group&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- other methods --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="method"/&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
                &lt;Static/&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
            &lt;Group Region="Methods"/&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- Nested structs --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="struct"&#xD;
                      Weight="600" /&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Static /&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- Nested classes --&gt;&#xD;
        &lt;Entry&gt;&#xD;
            &lt;Match&gt;&#xD;
                &lt;Kind Is="class"&#xD;
                      Weight="700" /&gt;&#xD;
            &lt;/Match&gt;&#xD;
            &lt;Sort&gt;&#xD;
                &lt;Static /&gt;&#xD;
                &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
                &lt;Name/&gt;&#xD;
            &lt;/Sort&gt;&#xD;
        &lt;/Entry&gt;&#xD;
&#xD;
        &lt;!-- all other members --&gt;&#xD;
        &lt;Entry/&gt;&#xD;
&#xD;
    &lt;/Pattern&gt;&#xD;
&lt;/Patterns&gt;&#xD;
</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/AddImportsToDeepestScope/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/AllowAlias/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/CanUseGlobalAlias/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/QualifiedUsingAtNestedScope/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/EventHandlerPatternLong/@EntryValue">$object$_On$event$</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/ExceptionName/@EntryValue"></s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Constants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=EnumMember/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Interfaces/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="I" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=LocalConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Locals/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=MethodPropertyEvent/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Other/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Parameters/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="_" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticReadonly/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PublicFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=StaticReadonly/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=TypeParameters/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="T" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=TypesAndNamespaces/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/EventHandlerPatternLong/@EntryValue">$object$_On$event$</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/ExceptionName/@EntryValue"></s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=Constants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=EnumMember/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=Interfaces/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="I" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=LocalConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=Locals/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=MethodPropertyEvent/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=Other/@EntryIndexedValue">&lt;Policy Inspect="False" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=Parameters/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=PrivateConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=PrivateStaticReadonly/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=PublicFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=StaticReadonly/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=TypeParameters/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="T" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/VBNaming/PredefinedNamingRules/=TypesAndNamespaces/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpFileLayoutPatternsUpgrade/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAddAccessorOwnerDeclarationBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateThisQualifierSettings/@EntryIndexedValue">True</s:Boolean>
	
	
	
	
	</wpf:ResourceDictionary>