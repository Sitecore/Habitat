@using Sitecore.Feature.Accounts
@using Sitecore.Feature.Accounts.Services
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.Theming.Extensions
@using Sitecore.Mvc
@model Sitecore.Feature.Accounts.Models.LoginInfo

@{
    var item = Html.Sitecore().CurrentItem;
    var titleField = Templates.LoginTeaser.Fields.Title;
    var summaryField = Templates.LoginTeaser.Fields.Summary;
    var isLoggedIn = Sitecore.Context.IsLoggedIn && Sitecore.Context.PageMode.IsNormal;
    if (isLoggedIn)
    {
        titleField = Templates.LoginTeaser.Fields.LoggedInTitle;
        summaryField = Templates.LoginTeaser.Fields.LoggedInSummary;
    }
}

<div class="well @Html.Sitecore().CurrentRendering.GetBackgroundClass()">
    @if (item.FieldHasValue(titleField) || Sitecore.Context.PageMode.IsExperienceEditor)
    {
        <h4>
            @Html.Sitecore().Field(titleField, item)
        </h4>
    }

    @if (item.FieldHasValue(summaryField) || Sitecore.Context.PageMode.IsExperienceEditor)
    {
        <p>
            @Html.Sitecore().Field(summaryField, item, new { linebreaks = "<br/>" })
        </p>
    }

    @if (Sitecore.Context.PageMode.IsExperienceEditor)
    {
        <div class="well bg-info">
            <label>
                @Html.Sitecore().Dictionary("/Accounts/Login/Logged In Fields Description", "These fields are shown when the user is logged in.")
            </label>
            <h4>
                @Html.Sitecore().Field(Templates.LoginTeaser.Fields.LoggedInTitle, item)
            </h4>
            <p>
                @Html.Sitecore().Field(Templates.LoginTeaser.Fields.LoggedInSummary, item, new
                                                                                           {
                                                                                               linebreaks = "<br/>"
                                                                                           })
            </p>
        </div>
    }

    @if (!isLoggedIn)
    {
        using (Html.BeginRouteForm(Sitecore.Mvc.Configuration.MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form-signin" }))
        {
            @Html.AddUniqueFormId()
            @Html.ValidationSummary(true)
            <div class="form-group @Html.ValidationErrorFor(x=>x.Email, "has-error")">
                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", id = "loginEmail", @placeholder = Html.Sitecore().Dictionary("/Accounts/Login/Login E-mail Placeholder", "Enter your e-mail") })
                @Html.ValidationMessageFor(x => x.Email, "", new { @class = "help-block" }, "p")
            </div>
            <div class="form-group @Html.ValidationErrorFor(x=>x.Password, "has-error")">
                @Html.PasswordFor(x => x.Password, new { @class = "form-control", id = "loginPassword", @placeholder = Html.Sitecore().Dictionary("/Accounts/Login/Login Password Placeholder", "Enter your password") })
                @Html.ValidationMessageFor(x => x.Password, "", new { @class = "help-block" }, "p")
            </div>
            @Html.ValidationMessage("invalidCredentials", new { @class = "alert alert-danger" }, "div")
            <input type="submit" class="btn btn-primary btn-block" value="@Html.Sitecore().Dictionary("/Accounts/Login/Login", "Login")" />
            <a href="@AccountsSettingsService.Instance.GetPageLinkOrDefault(Sitecore.Context.Item, Templates.AccountsSettings.Fields.RegisterPage)" class="btn btn-link btn-block">@Html.Sitecore().DictionaryField("/Accounts/Login/Register", "Register")</a>
            <a href="@AccountsSettingsService.Instance.GetPageLinkOrDefault(Sitecore.Context.Item, Templates.AccountsSettings.Fields.ForgotPasswordPage)" class="btn btn-link btn-block">@Html.Sitecore().DictionaryField("/Accounts/Login/Forgot Your Password", "Forgot your password?")</a>
        }
    }
    else
    {
        using (Html.BeginForm("Logout", "Accounts", FormMethod.Post))
        {
            if (!string.IsNullOrWhiteSpace(Sitecore.Context.User.Profile.FullName))
            {
                <div class="form-group">
                    <label class="control-label">@Html.Sitecore().DictionaryField("/Accounts/Accounts Menu/Email", "Name")</label>
                    <div class="form-control-static">@Sitecore.Context.User.Profile.FullName</div>
                </div>
            }
            <div class="form-group">
                <label class="control-label">@Html.Sitecore().DictionaryField("/Accounts/Accounts Menu/Email", "E-mail")</label>
                <div class="form-control-static">@Sitecore.Context.User.Profile.Email</div>
            </div>
            <a class="btn btn-block btn-primary" href="@AccountsSettingsService.Instance.GetPageLinkOrDefault(item, Templates.AccountsSettings.Fields.AccountsDetailsPage)">@Html.Sitecore().DictionaryField("/Accounts/Accounts Menu/Edit Details", "Edit details")</a>
            <button type="submit" class="btn btn-block btn-default">@Html.Sitecore().Dictionary("/Accounts/Accounts Menu/Logout", "Logout")</button>
        }
    }
</div>