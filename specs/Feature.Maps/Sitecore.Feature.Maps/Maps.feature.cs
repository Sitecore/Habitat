// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Sitecore.Feature.Maps
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class MapsFeature : Xunit.IClassFixture<MapsFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Maps.feature"
#line hidden
        
        public MapsFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Maps", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(MapsFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Maps")]
        [Xunit.TraitAttribute("Description", "Maps_UC1_Add new map")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void Maps_UC1_AddNewMap()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Maps_UC1_Add new map", new string[] {
                        "NeedImplementation"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Under item path",
                        "Template ID",
                        "Item name"});
            table1.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Map Points",
                        "067EC866-B3FB-485B-BB49-6151FB086E78",
                        "Custom Maps"});
#line 6
 testRunner.Given("New item was created", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Under item path",
                        "Template ID",
                        "Item name",
                        "Addres",
                        "Location"});
            table2.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Map Points/Custom Maps",
                        "11C28D16-9B88-456E-A42B-D4B5A82867E3",
                        "Old Trafford",
                        "Manchester, GB",
                        "53.46165999999999,-2.271706999999992"});
            table2.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Map Points/Custom Maps",
                        "11C28D16-9B88-456E-A42B-D4B5A82867E3",
                        "Wembley",
                        "London, GB",
                        "51.550501,-0.3048409000000447"});
#line 9
 testRunner.And("New item was created", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item path",
                        "Control",
                        "Data Source"});
            table3.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/Modules/Feature/Maps",
                        "Map",
                        "/sitecore/content/Habitat/Global/Map Points"});
#line 13
 testRunner.When("User defines final layout on page", ((string)(null)), table3, "When ");
#line 16
 testRunner.Then("Custom Maps present on Maps page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                MapsFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                MapsFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
