@using System.Web.Mvc.Html
@using Sitecore.Analytics.Tracking
@using Sitecore.Feature.Accounts.Models
@using Sitecore.Feature.Accounts.Texts
@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Models
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.SitecoreExtensions.HtmlHelpers
@using Sitecore.Mvc.Configuration
@model Sitecore.Feature.Accounts.Models.EditProfile

@using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form-signin" }))
{
  @Html.FormHandler()
  var info = Session.GetAndRemove("EditProfileMessage") as InfoMessage;
  if (info != null)
  {
    Html.RenderPartial(ViewPath.InfoMessage, info);
  }
  <div class="form-group @Html.ValidationErrorFor(x => x.FirstName, "has-error")">
    @Html.LabelFor(x => x.FirstName, new { @class = "control-label" })

    @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", id = "firstName", @placeholder = Captions.PlaceholderEditProfileFirstName })

    @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "help-block" }, "p")
  </div>

  <div class="form-group @Html.ValidationErrorFor(x => x.LastName, "has-error")">
    @Html.LabelFor(x => x.LastName, new { @class = "control-label" })

    @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", id = "lastName", @placeholder = Captions.PlaceholderEditProfileLastName })

    @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "help-block" }, "p")
  </div>

  <div class="form-group @Html.ValidationErrorFor(x => x.PhoneNumber, "has-error")">
    @Html.LabelFor(x => x.PhoneNumber, new { @class = "control-label" })

    @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control", id = "phoneNumber", @placeholder = Captions.PlaceholderEditProfilePhone })

    @Html.ValidationMessageFor(x => x.PhoneNumber, "", new { @class = "help-block" }, "p")
  </div>

  <div class="form-group @Html.ValidationErrorFor(x => x.Interest, "has-error")">
    @Html.LabelFor(x => x.Interest, new { @class = "control-label" })

    @Html.DropDownListFor(x => x.Interest, new SelectList(Model.InterestTypes), "", new { @class = "form-control", id = "interests" })

    @Html.ValidationMessageFor(x => x.Interest, "", new { @class = "help-block" }, "p")
</div>

    <input type="submit" class="btn btn-primary btn-lg btn-block" value="@Captions.Update" />
}