// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Habitat.Demo.Specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ShowTrackingInformationFeature : Xunit.IUseFixture<ShowTrackingInformationFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Show Tracking Information.feature"
#line hidden
        
        public ShowTrackingInformationFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Show Tracking Information", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(ShowTrackingInformationFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC1_Expand Slide bar with tracking info")]
        public virtual void Demo_ShowTrackingInformation_UC1_ExpandSlideBarWithTrackingInfo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC1_Expand Slide bar with tracking info", new string[] {
                        "NeedImplementation"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("Slide bar element was expanded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC1_Collapse Slide bar with tracking info")]
        public virtual void Demo_ShowTrackingInformation_UC1_CollapseSlideBarWithTrackingInfo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC1_Collapse Slide bar with tracking info", new string[] {
                        "NeedImplementation"});
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.And("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.Then("Slide bar element was collapsed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC2_Contact_First Visit")]
        public virtual void Demo_ShowTrackingInformation_UC2_Contact_FirstVisit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC2_Contact_First Visit", new string[] {
                        "NeedImplementation"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number of visits",
                        "Engagement value"});
            table1.AddRow(new string[] {
                        "1",
                        "10"});
#line 25
 testRunner.Then("System shows following info on Contact panel title", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC2_Contact_Few Visits")]
        public virtual void Demo_ShowTrackingInformation_UC2_Contact_FewVisits()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC2_Contact_Few Visits", new string[] {
                        "NeedImplementation"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 33
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
 testRunner.And("User clicks END VISIT button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Number of visits",
                        "Engagement value"});
            table2.AddRow(new string[] {
                        "2",
                        "20"});
#line 37
 testRunner.Then("System shows following info on Contact panel title", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC3_Contact_Identification")]
        public virtual void Demo_ShowTrackingInformation_UC3_Contact_Identification()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC3_Contact_Identification", new string[] {
                        "NeedImplementation"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.And("User expands Identification section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.Then("Contact ID term with it\'s ID presents", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC3_Contact_Identification_new session")]
        public virtual void Demo_ShowTrackingInformation_UC3_Contact_Identification_NewSession()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC3_Contact_Identification_new session", new string[] {
                        "NeedImplementation"});
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.And("User records Contact ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("User cleans up browser cookies", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And("User refreshes browser page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.And("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("User expands Identification section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.Then("New Contact ID presents", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC4_Contact_Classification_List of the available c" +
            "heck boxes(Unclassified)")]
        public virtual void Demo_ShowTrackingInformation_UC4_Contact_Classification_ListOfTheAvailableCheckBoxesUnclassified()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC4_Contact_Classification_List of the available c" +
                    "heck boxes(Unclassified)", new string[] {
                        "NeedImplementation"});
#line 64
this.ScenarioSetup(scenarioInfo);
#line 66
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.And("User expands Classification section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Area Name",
                        "Checkbox state"});
            table3.AddRow(new string[] {
                        "Unclassified",
                        "checked"});
            table3.AddRow(new string[] {
                        "Business Visitor",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "ISP",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "Existing Customer",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "Analyst",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "Press",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "Supplier",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "Business Partner",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "Competitor",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "My Company",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "Bot - Feed Reader",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "Bot - Search Engine",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "Bot - Unidentified",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "Bot - Auto-detected",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "Bot - Malicious",
                        "unchecked"});
#line 69
 testRunner.Then("Following check boxes present in list", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC4_Contact_Classification_Existing customer check" +
            "ed")]
        public virtual void Demo_ShowTrackingInformation_UC4_Contact_Classification_ExistingCustomerChecked()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC4_Contact_Classification_Existing customer check" +
                    "ed", new string[] {
                        "InDesign"});
#line 89
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "ConfirmPassword"});
            table4.AddRow(new string[] {
                        "kov@sitecore.net",
                        "k",
                        "k"});
#line 91
 testRunner.Given("User with following data is registered in Habitat", ((string)(null)), table4, "Given ");
#line 94
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
 testRunner.And("User expands Classification section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Area Name",
                        "Checkbox state"});
            table5.AddRow(new string[] {
                        "Unclassified",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "Business Visitor",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "ISP",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "Existing Customer",
                        "checked"});
            table5.AddRow(new string[] {
                        "Analyst",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "Press",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "Supplier",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "Business Partner",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "Competitor",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "My Company",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "Bot - Feed Reader",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "Bot - Search Engine",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "Bot - Unidentified",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "Bot - Auto-detected",
                        "unchecked"});
            table5.AddRow(new string[] {
                        "Bot - Malicious",
                        "unchecked"});
#line 96
 testRunner.Then("Following check boxes present in list", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC5_This Visit_First Visit")]
        public virtual void Demo_ShowTrackingInformation_UC5_ThisVisit_FirstVisit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC5_This Visit_First Visit", new string[] {
                        "NeedImplementation"});
#line 117
this.ScenarioSetup(scenarioInfo);
#line 118
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 119
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Pages Viewed",
                        "Engagement value"});
            table6.AddRow(new string[] {
                        "1",
                        "10"});
#line 120
 testRunner.Then("Following This Visit section contains", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC5_This Visit_Few Visits")]
        public virtual void Demo_ShowTrackingInformation_UC5_ThisVisit_FewVisits()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC5_This Visit_Few Visits", new string[] {
                        "NeedImplementation"});
#line 126
this.ScenarioSetup(scenarioInfo);
#line 128
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 129
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
 testRunner.And("User clicks END VISIT button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.And("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Pages Viewed",
                        "Engagement value"});
            table7.AddRow(new string[] {
                        "1",
                        "10"});
#line 132
 testRunner.Then("Following This Visit section contains", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC5_This Visit_Few Visits and pages")]
        public virtual void Demo_ShowTrackingInformation_UC5_ThisVisit_FewVisitsAndPages()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC5_This Visit_Few Visits and pages", new string[] {
                        "NeedImplementation"});
#line 138
this.ScenarioSetup(scenarioInfo);
#line 140
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 141
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 142
 testRunner.And("User clicks END VISIT button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.And("User selects CONTACT US navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Pages Viewed",
                        "Engagement value"});
            table8.AddRow(new string[] {
                        "2",
                        "10"});
#line 145
 testRunner.Then("Following This Visit section contains", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC6_Patterns_Focus Developer")]
        public virtual void Demo_ShowTrackingInformation_UC6_Patterns_FocusDeveloper()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC6_Patterns_Focus Developer", new string[] {
                        "NeedImplementation"});
#line 152
this.ScenarioSetup(scenarioInfo);
#line 153
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 154
 testRunner.When("Actor moves cursor over the Modules", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 155
 testRunner.And("User selects PROJECT navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
 testRunner.And("User selects default image", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
 testRunner.And("User clicks on Website list-group-item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.And("User clicks on Design list-group-item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.And("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
 testRunner.And("User expands Patterns section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
 testRunner.Then("Following image presents: http://habitat.test5ua1.dk.sitecore.net/-/media/Habitat" +
                    "/Images/Square/Habitat-067-square.jpg?mw=50&w=50&hash=EDC92E237DDCFE910A6CD27BCA" +
                    "2530938E06AE6D", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text H4",
                        "Text H5"});
            table9.AddRow(new string[] {
                        "FOCUS",
                        "DEVELOPER"});
#line 162
 testRunner.And("Following Patterns section contains", ((string)(null)), table9, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC6_Patterns_Focus Architect")]
        public virtual void Demo_ShowTrackingInformation_UC6_Patterns_FocusArchitect()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC6_Patterns_Focus Architect", new string[] {
                        "NeedImplementation"});
#line 168
this.ScenarioSetup(scenarioInfo);
#line 169
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 170
 testRunner.When("Actor moves cursor over the ABOUT HABITAT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 171
 testRunner.And("User selects Fundamentals navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
 testRunner.And("User clicks on Flexibility link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
 testRunner.And("User clicks on Extensibility link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.And("User clicks on Cimplicity link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
 testRunner.And("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
 testRunner.And("User expands Patterns section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
 testRunner.Then("Following image presents: http://habitat.test5ua1.dk.sitecore.net/-/media/Habitat" +
                    "/Images/Square/Habitat-080-square.jpg?mw=50&w=50&hash=2C014C2D7867CA453275963843" +
                    "0D9EAD55038059", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text H4",
                        "Text H5"});
            table10.AddRow(new string[] {
                        "FOCUS",
                        "ARCHITECT"});
#line 178
 testRunner.And("Following Patterns section contains", ((string)(null)), table10, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC7_Campaigns")]
        public virtual void Demo_ShowTrackingInformation_UC7_Campaigns()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC7_Campaigns", new string[] {
                        "NeedImplementation"});
#line 184
this.ScenarioSetup(scenarioInfo);
#line 185
 testRunner.Given("Habitat website is opened on http://habitat.test5ua1.dk.sitecore.net?sc_camp=9AC6" +
                    "AD85B15A4A5BB14337185A19364E", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 186
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 187
 testRunner.And("User expands Campaigns section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Campaign name"});
            table11.AddRow(new string[] {
                        "Habitat Test Campaign"});
#line 188
 testRunner.Then("Following Campaigns section contains", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC8_Geo IP Location")]
        public virtual void Demo_ShowTrackingInformation_UC8_GeoIPLocation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC8_Geo IP Location", new string[] {
                        "InDesign"});
#line 193
this.ScenarioSetup(scenarioInfo);
#line 194
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 195
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 196
 testRunner.And("User expands Geo IP Location section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
 testRunner.Then("<I have no idea how to test it now>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC9_Device")]
        public virtual void Demo_ShowTrackingInformation_UC9_Device()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC9_Device", new string[] {
                        "NeedImplementation"});
#line 201
this.ScenarioSetup(scenarioInfo);
#line 202
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 203
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 204
 testRunner.And("User expands Device section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Device Type",
                        "Vendor",
                        "Operating System",
                        "Browser",
                        "Display Height",
                        "Display Width"});
            table12.AddRow(new string[] {
                        "Computer",
                        "Misc",
                        "Windows 7 (Microsoft)",
                        "Unidentified",
                        "Unknown",
                        "Unknown"});
#line 205
 testRunner.Then("Following Device section contains", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC10_Pages_Shown pages")]
        public virtual void Demo_ShowTrackingInformation_UC10_Pages_ShownPages()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC10_Pages_Shown pages", new string[] {
                        "NeedImplemantation"});
#line 213
this.ScenarioSetup(scenarioInfo);
#line 214
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 215
 testRunner.When("User selects CONTACT US navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 216
 testRunner.And("User selects PROJECT navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.And("User selects default image", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.And("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.And("User expands Pages section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Page link"});
            table13.AddRow(new string[] {
                        "/Website"});
            table13.AddRow(new string[] {
                        "/Project"});
            table13.AddRow(new string[] {
                        "Contact-Us"});
            table13.AddRow(new string[] {
                        "Home"});
#line 220
 testRunner.Then("Following Pages section contains", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC10_Pages_Click link to page")]
        public virtual void Demo_ShowTrackingInformation_UC10_Pages_ClickLinkToPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC10_Pages_Click link to page", new string[] {
                        "NeedImplemantation"});
#line 229
this.ScenarioSetup(scenarioInfo);
#line 230
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 231
 testRunner.When("User selects CONTACT US navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 232
 testRunner.And("User selects HOME navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
 testRunner.And("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 234
 testRunner.And("User expands Pages section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
 testRunner.And("User selects Contact Us from the Pages section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
 testRunner.Then("Page URL ends on /Contact-Us", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 237
 testRunner.And("Contact Us title presents on page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC11_Goals_Goals archived")]
        public virtual void Demo_ShowTrackingInformation_UC11_Goals_GoalsArchived()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC11_Goals_Goals archived", new string[] {
                        "NeedImplementation"});
#line 241
this.ScenarioSetup(scenarioInfo);
#line 242
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 243
 testRunner.When("Actor moves cursor over the User icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 244
 testRunner.And("User selects Register from drop-down menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 245
 testRunner.And("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
 testRunner.And("User expands Goals section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Goal name with score"});
            table14.AddRow(new string[] {
                        "Register page (20)"});
            table14.AddRow(new string[] {
                        "Home Page (10)"});
#line 247
 testRunner.Then("Following Goals section contains", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show Tracking Information")]
        [Xunit.TraitAttribute("Description", "Demo_Show Tracking Information_UC12_Engagement")]
        public virtual void Demo_ShowTrackingInformation_UC12_Engagement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Demo_Show Tracking Information_UC12_Engagement", new string[] {
                        "NeedImplementation"});
#line 257
this.ScenarioSetup(scenarioInfo);
#line 258
 testRunner.Given("Habitat website is opened on http://habitat.test5ua1.dk.sitecore.net/Register?sc_" +
                    "camp=9AC6AD85B15A4A5BB14337185A19364E>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 259
 testRunner.When("User clicks on <Info-sign> in the right down corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 260
 testRunner.And("User expands Engagement section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Engagement plan name"});
            table15.AddRow(new string[] {
                        "Register Page Open"});
#line 261
 testRunner.Then("Following Engagement section contains", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ShowTrackingInformationFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ShowTrackingInformationFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
