@using Sitecore.Feature.Media
@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@model Sitecore.Mvc.Presentation.RenderingModel

@if (!Model?.Item?.IsDerived(Templates.HasMediaVideo.ID) ?? true)
{
    @Html.PageEditorError(AlertTexts.InvalidDataSourceTemplate(Templates.HasMediaVideo.ID), AlertTexts.InvalidDataSourceTemplateFriendlyMessage, Model.Item?.ID, Model.Rendering.Item?.ID)
    return;
}

@*TODO: Page editor mode*@@{
                              const int thumbnailWidth = 750;
                              var thumbnail = Html.Sitecore().ImageField(Templates.HasMedia.Fields.MediaThumbnail.ToString(), Model.Item, mw: thumbnailWidth, cssClass: "img-responsive");
                              if (thumbnail == null || string.IsNullOrWhiteSpace(thumbnail.ToString()))
                              {
                                  return;
                              }

                              var mediaType = Model.Item.LinkFieldOptions(Templates.HasMediaVideo.Fields.MediaVideoLink, LinkFieldOption.LinkType);
                          }

<div class="thumbnail mosaic mosaic-circle lightbox-item lightbox-image">
    <div class="mosaic-overlay mosaic-overlay-no-pointer">
        <span class="fa fa-play-circle icon-lg"></span>
    </div>
    <div class="mosaic-backdrop">
        <a href="@Model.Item.LinkFieldUrl(Templates.HasMediaVideo.Fields.MediaVideoLink)" data-type="@(mediaType == "media" ? "video" : "")" data-title="@Model.Item[Templates.HasMedia.Fields.MediaTitle]" data-footer="@Html.Encode(Html.Sitecore().Field(Templates.HasMedia.Fields.MediaDescription, Model.Item))" data-toggle="lightbox" data-gallery="page" data-width="@thumbnailWidth">
            @thumbnail
        </a>
    </div>
</div>