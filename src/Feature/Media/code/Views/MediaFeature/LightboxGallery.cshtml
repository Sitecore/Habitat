@using Sitecore.Feature.Media
@using Sitecore.Feature.Media.Repositories
@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Resources.Media
@model Sitecore.Mvc.Presentation.RenderingModel
@if (!Model?.Item?.DescendsFrom(Templates.HasMediaSelector.ID) ?? true)
{
  @Html.PageEditorError(AlertTexts.InvalidDataSourceTemplate(Templates.HasMediaSelector.ID), AlertTexts.InvalidDataSourceTemplateFriendlyMessage, Model.Item?.ID, Model.Rendering.Item?.ID)
  return;
}

@{
  var galleryId = "gallery" + Guid.NewGuid().ToString("N");
  var elements = MediaSelectorElementsRepository.Get(Model.Item).ToArray();
}


<div class="block-grid-lg-4 block-grid-md-3 block-grid-sm-2 block-grid-xs-1" id="@galleryId">
  @foreach (var element in elements)
  {
    const int ThumbnailWidth = 750;
    const int maxWidth = 1200;
    var thumbnailField = element.Item.FieldHasValue(Templates.HasMedia.Fields.Thumbnail) ? Templates.HasMedia.Fields.Thumbnail : Templates.HasMediaImage.Fields.Image;
    var thumbnail = Html.Sitecore().ImageField(thumbnailField, element.Item, mw: ThumbnailWidth, cssClass: "img-responsive");
    if (string.IsNullOrWhiteSpace(thumbnail?.ToString()))
    {
      continue;
    }

    <div class="block-grid-item">
      <div class="thumbnail mosaic mosaic-circle lightbox-item lightbox-image">
        <div class="mosaic-overlay mosaic-overlay-no-pointer">
          @if (element.Item.DescendsFrom(Templates.HasMediaVideo.ID))
          {
            <span class="fa fa-play-circle icon-lg"></span>
          }
          else
          {
            <span class="fa fa-search-plus icon-lg"></span>
          }
        </div>
        <div class="mosaic-backdrop">
          @if (element.Item.DescendsFrom(Templates.HasMediaVideo.ID))
          {
            var linkFieldUrl = element.Item.LinkFieldUrl(Templates.HasMediaVideo.Fields.VideoLink);
            if (!string.IsNullOrWhiteSpace(linkFieldUrl))
            {
          <a href="@linkFieldUrl" data-type="image" data-title="@element.Item[Templates.HasMedia.Fields.Title]" data-footer="@Html.Encode(Html.Sitecore().Field(Templates.HasMedia.Fields.Description, element.Item))" data-toggle="lightbox" data-gallery="@galleryId">
                @thumbnail
              </a>
            }
          }
          else
          {
        <a href="@element.Item.ImageUrl(Templates.HasMediaImage.Fields.Image, new MediaUrlOptions(maxWidth, 0, false))" data-type="image" data-title="@element.Item[Templates.HasMedia.Fields.Title]" data-footer="@Html.Encode(Html.Sitecore().Field(Templates.HasMedia.Fields.Description, element.Item))" data-toggle="lightbox" data-gallery="@galleryId">
              @thumbnail
            </a>
          }
        </div>
      </div>
    </div>
  }
</div>