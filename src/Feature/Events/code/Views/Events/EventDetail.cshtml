@using Sitecore.Feature.Events
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using System.Globalization
@using Sitecore.Mvc.Presentation
@model Sitecore.Feature.Events.Models.EventModel
@{
    var googleMapsApiKey = Sitecore.Context.Site.GetRootItem().GetString(Templates.Event.EventSettings.GoogleMapsApiKey);
    var currentItem = RenderingContext.Current.ContextItem;
    var startDateUtc = Model.StartDate?.ToUniversalTime();
    var endDateUtc = Model.EndDate?.ToUniversalTime();

    HtmlString startDateFieldVal, endDateFieldVal;
    if (!Sitecore.Context.PageMode.IsExperienceEditorEditing)
    {
        startDateFieldVal = Html.Sitecore().Field(Templates.Event.Fields.StartDate.ToString(), new { format = "MMMM dd, yyyy" });
        endDateFieldVal = Html.Sitecore().Field(Templates.Event.Fields.EndDate.ToString(), new { format = "MMMM dd, yyyy" });
    }
    else
    {
        startDateFieldVal = new HtmlString(startDateUtc?.Date.ToShortDateString() ?? string.Empty);
        endDateFieldVal = new HtmlString(endDateUtc?.Date.ToShortDateString() ?? string.Empty);
    }

}
<link href="/Scripts/addtocalendar/atc/1.5/atc-style-blue.css" rel="stylesheet" type="text/css">
<script type="text/javascript">
(function () {
            if (window.addtocalendar)if(typeof window.addtocalendar.start == "function")return;
            if (window.ifaddtocalendar == undefined) { window.ifaddtocalendar = 1;
                var d = document, s = d.createElement('script'), g = 'getElementsByTagName';
                s.type = 'text/javascript';s.charset = 'UTF-8';s.async = true;
                s.src = ('https:' == window.location.protocol ? 'https' : 'http')+'://addtocalendar.com/atc/1.5/atc.min.js';
                var h = d[g]('body')[0]; h.appendChild(s);
            }
})();

    //event tracking
$(document).ready(function() {
    $('.addtocalendar').on('click', '.atcb-item-link', function () {
        var data = $(this).text();
        $.get("/api/EventsApi/RegisterCalendarAddPageEvent?id=@currentItem.ID.ToString()&data=" + data + "&text=@currentItem.Name");
    });    
});
</script>
<div class="events">
    <h2>
        @Html.Sitecore().Field(Templates.Event.Fields.Title.ToString(), Model.Item)
    </h2>

    <div class="well">
        <span class="text-muted">
            <strong>When:</strong> @startDateFieldVal - @endDateFieldVal <br />
            <strong>From:</strong> @Model.GetEventFormattedTimeUtc()
        </span>
        <!-- 3. Place event data -->
        <span class="addtocalendar atc-style-blue pull-right">
            <var class="atc_event">
                <var id="" class="atc_date_start">@(startDateUtc?.ToString("yyyy-MM-dd HH:mm:ss", CultureInfo.InvariantCulture) ?? string.Empty)</var>
                <var class="atc_date_end">@(endDateUtc?.ToString("yyyy-MM-dd HH:mm:ss", CultureInfo.InvariantCulture) ?? string.Empty)</var>
                <var class="atc_timezone">Europe/London</var>
                <var class="atc_title">@Model.Title</var>
                <var class="atc_description">@Model.Summary</var>
                <var class="atc_location">@Model.Location</var>
            </var>
        </span>
    </div>
    @Html.Sitecore().ImageField(Templates.Event.Fields.Image.ToString(), Model.Item, mw: 1000, cssClass: "img-responsive image")
    <div class="body">
        <br />
        @Html.Sitecore().Field(Templates.Event.Fields.Description.ToString(), Model.Item)
    </div>
</div>

<!-- Map -->
@if (!string.IsNullOrEmpty(Model.Location))
{
    if (!string.IsNullOrEmpty(googleMapsApiKey))
    {
        var mapSrc = $"https://www.google.com/maps/embed/v1/place?key={googleMapsApiKey}&q={Model.Location}";
        <h4>Where</h4>
        <div class="embed-responsive embed-responsive-4by3">
            <iframe width="600"
                    height="450"
                    class="embed-responsive-item"
                    style="border: 0"
                    src="@mapSrc" allowfullscreen></iframe>
        </div>        
    }
    else
    {
        <div class="well">
            <span class="text-muted"><strong>Where:</strong> @Model.Location</span>
</div>
    }
}
