<!--
	This is an example of how to configure a Unicorn configuration that overrides the location on disk to store the serialized items.

	Enabled configuration definition patches should be present on all environments Unicorn is present on.

	See Unicorn.config for commentary on how configurations operate, or https://github.com/kamsar/Unicorn/blob/master/README.md
-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
	<sitecore>
		<unicorn>
			<defaults>
				<!--
						The target data store is where we write serialized items to, use this patch to alter where items are serialized to and from.

						Note the target data store's rootPath can be any of:
						Absolute filesystem path, e.g. c:\foo\bar
						Web-root-relative path, e.g. ~/data/serialization or ~/../out-of-root-serialization
						Data-folder-relative path, e.g. $(dataFolder)\serializedItems

						DO NOT SHARE A ROOT PATH BETWEEN CONFIGURATIONS (at least if you're using SFS).
						They can clobber each other's folders. You may inject the name of the current
						configuration as a variable with $(configurationName).

						The data cache uses a memory cache to store serialized items read from disk. It
						is recommended if using transparent syncing for performance. It's not really
						needed otherwise.
					-->
				<targetDataStore type="Rainbow.Storage.SerializationFileSystemDataStore, Rainbow">
					<patch:attribute name="physicalRootPath">c:\path-to-source\Unicorn\$(configurationName)</patch:attribute>
				</targetDataStore>

				<predicate type="Unicorn.Predicates.SerializationPresetPredicate, Unicorn" singleInstance="true">
					<include database="master" path="/sitecore/content/global-settings" />
				</predicate>
			</defaults>
		</unicorn>
	</sitecore>
</configuration>
